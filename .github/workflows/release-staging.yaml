name: Create Release Branch and Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The release version (e.g., 1.0.0)"
        required: true

jobs:
  check-tag-and-create-branch:
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ github.event.inputs.version }}
      TAG_NAME: v${{ github.event.inputs.version }}

    permissions:
      actions: read
      checks: read
      contents: write
      deployments: read
      discussions: read
      issues: read
      metadata: write
      packages: read
      pages: read
      pull-requests: read
      repository-projects: read
      security-events: read
      statuses: read

    steps:
      - name: Validate version format
        run: |
          if [[ ! "${{ env.VERSION }}" =~ ^[0-9]+\.[0-9]+\.0$ ]]; then
            echo "Invalid version format. Please use the 1.0.0 format. Exiting the workflow with an error."
            exit 1

          fi

      - name: Check out code
        uses: actions/checkout@v3

      - name: Check if tag exists
        run: |
          echo "Checking if tag ${TAG_NAME} exists."
          TAG_EXISTS=$(git tag -l)
          echo "Tag exists: $TAG_EXISTS"
          if [ -n "$TAG_EXISTS" ]; then
            echo "Tag ${TAG_NAME} already exists. Exiting the workflow."
            exit 1
          fi

      - name: Check if branch exists
        run: |
          BRANCH_NAME="release/${VERSION%.0}.x"
          BRANCH_EXISTS=$(git show-ref --verify --quiet "refs/heads/$BRANCH_NAME")
          if [ -n "$BRANCH_EXISTS" ]; then
            echo "Branch ${BRANCH_NAME} already exists. Exiting the workflow with an error."
            exit 1
          fi

      - name: Create release branch
        run: |
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME

      - name: Tag the commit with initial version
        run: |
          git tag -f staging ${{ env.TAG_NAME }}
          git push origin --tags -f
